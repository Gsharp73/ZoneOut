<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-2X9vnqJ+e9Up7Rx8l+eG7A4kV6ZsG7dZ+2/1vG6u5MQ3nN3V9bk4tF4c9Suobnt5k6n5Hr/s4r6rVTX8DpKqw==" crossorigin="anonymous" referrerpolicy="no-referrer" />  
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      height: 100vh;
      background: url('<%= imageUrl %>') no-repeat center center fixed;
      background-size: cover;
      color: white;
      text-align: center;
      padding-top: 10vh;
    }

    div {
      margin-top: 5vh;
    }

    h1 {
      font-size: 10vw;
      margin: 0;
    }

    h2 {
      font-size: 5vw;
      margin: 10px 0; 
    }

    h3 {
      font-size: 5vw;
      margin: 10px 0; 
    }

    .task-list {
      max-height: 2000px;
      overflow-y: auto;
      margin-top: 20px;
      background-color: rgba(0, 0, 0, 0.5);
      padding: 15px;
      border-radius: 8px;
      position: relative;
    }

    .task-list span {
      font-size: 2vw;
    }

    .task {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      font-size: 1.2em;
    }

    .task input[type="checkbox"] {
      margin-right: 15px;
      width: 26px;
      height: 26px;
      border: 1px solid white;
      border-radius: 2px;
      background-color: transparent;
      appearance: none;
      outline: none;
      cursor: pointer;
      position: relative;
    }

    .task input[type="checkbox"]:checked::before {
      content: "\2714";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: white; 
      font-size: 15px; 
    }

    .task input[type="checkbox"]:checked {
      background-color: rgba(0, 0, 0, 0.5);
    }

    .task form {
      display: inline;
    }

    .add-task {
      margin-top: 30px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .add-task form {
      display: flex;
      align-items: center;
      width: 100%; 
    }

    .add-task input[type="text"] {
      padding: 10px;
      border-radius: 8px;
      border: none;
      font-size: 1.2rem;
      flex: 1;
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      backdrop-filter: blur(5px);
    }

    .add-task input::placeholder {
      color: white;
    }

    .add-task button {
      padding: 8px;
      border-radius: 8px;
      border: none;
      background-color: rgba(255, 255, 255, 0.5);
      color: white;
      cursor: pointer;
      font-size: 1.2rem;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-left: 10px;
      backdrop-filter: blur(5px);
    }

    .add-task button img {
      width: 24px;
      height: 24px;
    }

    .add-task button:hover {
      background-color: rgba(255, 255, 255, 0.7);
    }

    .change-background-button {
      position: fixed;
      top: 10px;
      left: 10px;
      padding: 10px;
      border: none;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.5);
      cursor: pointer;
      z-index: 1000;
    }

    .change-background-button img {
      width: 36px;
      height: 36px;
    }

    .logout-button {
      position: fixed;
      top: 10px;
      right: 10px;
      padding: 10px;
      border: none;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.5);
      cursor: pointer;
      z-index: 1000;
    }

    .logout-button img {
      width: 36px;
      height: 36px;
    }

    .delete-button {
      background: rgba(255, 255, 255, 0.5); 
      border: none;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 5px;
    }

    .delete-button img {
      width: 32px;
      height: 32px;
    }

    .task-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: white;
    }

    @media (max-width: 600px) {
      h1 {
        font-size: 10vw;
      }
      h2 {
        font-size: 6vw;
      }
      h3 {
        font-size: 4vw;
      }
      .task-list span {
        font-size: 3vw;
      }
    }

    @media (min-width: 1200px) {
      h1 {
        font-size: 5vw;
      }
      h2 {
        font-size: 3vw;
      }
      h3 {
        font-size: 2vw;
      }
      .task-list span {
        font-size: 2vw;
      }
    }
  </style>
</head>
<body>
  <button class="change-background-button" title="Change Background">
    <img src="/images/reset.png" alt="Change Background">
  </button>
  
  <button class="logout-button" title="Logout">
    <img src="/images/logout.png" alt="Logout">
  </button>
  
  <div>
    <h1><%= currentTime %></h1>
    <h2>Hi <%= username %>!</h2>
    <div class="task-list">
      <h3>What's on your mind!</h3>
      <% tasks.forEach(function(task) { %>
        <div class="task">
          <form action="/home/toggleTask/<%= task._id %>?usern=<%= username %>" method="POST">
            <input type="checkbox" onChange="this.form.submit()" <%= task.completed ? 'checked' : '' %> />
            <span style=`text-decoration: <%= task.completed ? 'line-through' : 'none' %>;`><%= task.name %></span>
          </form>
          <form action="/home/deleteTask/<%= task._id %>?usern=<%= username %>" method="POST" class="delete-button-form">
            <button type="submit" class="delete-button">
              <img src="/images/bin.png" alt="Delete Task">
            </button>
          </form>
        </div>        
      <% }) %>
      <div class="add-task">
        <form id="addTaskForm">
          <input type="text" name="taskName" placeholder="Add a new task" required />
          <button type="submit" class="add-button">
            <img src="/images/add.png" alt="Add Task">
          </button>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      document.querySelector('#addTaskForm').addEventListener('submit', function(event) {
        event.preventDefault();
        const taskName = document.querySelector('input[name="taskName"]').value;
        addTask(taskName);
      });

      async function addTask(taskn) {
        const userr = localStorage.getItem('username');
        if (!userr) {
          alert('User not logged in');
          return;
        }

        const response = await fetch('/home/addTask', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ taskName: taskn , username: userr }),
        });

        if (response.ok) {
          window.location.reload();
        } else {
          alert('Failed to add task');
        }
      }
    });
      document.querySelector('.logout-button').addEventListener('click', function() {
        fetch('/home/logout', { method: 'POST' })
          .then(() => {
            localStorage.removeItem('username');
            localStorage.removeItem('isLoggedIn');
            localStorage.removeItem('password');
            window.location.href = '/'; 
          });
          console.log('loggedout');
      });

      function updateTime() {
        const now = new Date();
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        const seconds = String(now.getSeconds()).padStart(2, '0');
        document.querySelector('h1').textContent = `${hours}:${minutes}:${seconds}`;
      }

      setInterval(updateTime, 1000);

      document.querySelector('.change-background-button').addEventListener('click', function() {
        fetch('/home/changeBackground', { method: 'POST' })
          .then(response => response.json())
          .then(data => {
            if (data.imageUrl) {
              document.body.style.backgroundImage = `url('${data.imageUrl}')`;
            } else {
              console.error('Failed to change background image');
            }
          })
          .catch(error => console.error('Error:', error));
      });

      function checkLoginStatus() {
        const isLoggedIn = localStorage.getItem('isLoggedIn');
        if (!isLoggedIn) {
          window.location.href = '/'; 
        }
      }

      checkLoginStatus();
      updateTime();
  </script>

</body>
</html>


